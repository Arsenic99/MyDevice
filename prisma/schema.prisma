// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @default(uuid())
  email String
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Store {
  id String @id @default(uuid())
  name String
  locations Location[] @relation("StoreToLocation")
  categories Category[] @relation("StoreToCategory")
  equipments Equipment[] @relation("StoreToEquipment")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id String @id @default(uuid())
  name String
  responsiblePerson String
  storeId String
  store Store @relation("StoreToLocation", fields: [storeId], references: [id])
  categories Category[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Category {
  id String @id @default(uuid())
  name String
  storeId String
  store Store @relation("StoreToCategory", fields: [storeId], references: [id])
  locationId String
  location Location @relation(fields: [locationId], references: [id])
  equipments Equipment[] @relation("CategoryToEquipment")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([locationId])
}

model Equipment {
  id String @id @default(uuid())
  name String
  serialNumber String
  inventoryNumber String
  storeId String
  store Store @relation("StoreToEquipment", fields: [storeId], references: [id])
  categoryId String
  category Category @relation("CategoryToEquipment", fields: [categoryId], references: [id])
  files File[] @relation("EquipmentToFile")
  events Event[] @relation("EquipmentToEvent")
  workorders WorkOrder[] @relation("EquipmentToWO")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([categoryId])
}

model File {
  id String @id @default(uuid())
  fileName String
  path String
  equipmentId String
  time String
  timeFrom String
  timeTo String
  equipment Equipment @relation("EquipmentToFile", fields: [equipmentId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([equipmentId])
}

model Event {
  id String @id @default(uuid())
  title String
  equipmentId String
  equipment Equipment @relation("EquipmentToEvent", fields: [equipmentId], references: [id])
  rrule RecurrenceRule[] @relation("EventToRule")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([equipmentId])
}

model RecurrenceRule {
  id String @id @default(uuid())
  eventId String
  event Event @relation("EventToRule", fields: [eventId], references: [id])
  freq String
  interval Int
  dtstart String
  until String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([eventId])
}

model WorkOrder {
  id String @id @default(uuid())
  name String
  description String
  equipmentId String
  equipment Equipment @relation("EquipmentToWO", fields: [equipmentId], references: [id])
  startDate DateTime
  finishDate DateTime
  defectAct DefectAct[] @relation("WorkOrderToDefect")
  repairAct RepairAct[] @relation("WorkOrderToRepair")
  maintenanceAct MaintenanceAct[] @relation("WorkOrderToMaintenance")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([equipmentId])
}

model MaintenanceAct {
  id String @id @default(uuid())
  workOrderId String
  workOrder WorkOrder @relation("WorkOrderToMaintenance", fields: [workOrderId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([workOrderId])
}

model DefectAct {
  id String @id @default(uuid())
  workOrderId String
  workOrder WorkOrder @relation("WorkOrderToDefect", fields: [workOrderId], references: [id])
  defect Defect[] @relation("DefectActToDefect")
  repairact RepairAct [] @relation("DefectActToRepairAct")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([workOrderId])
}

model Defect {
  id String @id @default(uuid())
  defectactId String
  defectact DefectAct @relation("DefectActToDefect", fields: [defectactId], references: [id])
  description String
  reason String
  correctiveAction String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([defectactId])
}

model RepairAct {
  id String @id @default(uuid())
  workOrderId String
  workOrder WorkOrder @relation("WorkOrderToRepair", fields: [workOrderId], references: [id])
  defectactId String
  defectact DefectAct @relation("DefectActToRepairAct", fields: [defectactId], references: [id])
  repair Repair[] @relation("RepairActToRepair")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([workOrderId])
  @@index([defectactId])
}

model Repair {
  id String @id @default(uuid())
  repairactId String
  repairact RepairAct @relation("RepairActToRepair", fields: [repairactId], references: [id])
  description String
  action String
  materials String
  tools String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([repairactId])
}